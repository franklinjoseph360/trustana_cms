// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id               String             @id @default(uuid())
  name             String
  isLeaf           Boolean            @default(false)
  parentId         String?
  parent           Category?          @relation("CategoryToChildren", fields: [parentId], references: [id])
  children         Category[]         @relation("CategoryToChildren")
  products         Product[]
  parentPaths      CategoryTreePath[] @relation("ChildToTreePath")
  childPaths       CategoryTreePath[] @relation("ParentToTreePath")

  @@index([parentId])
  @@unique([name, parentId])
}

model CategoryTreePath {
  parentCategoryId String
  childCategoryId  String
  depth            Int

  parentCategory   Category @relation("ParentToTreePath", fields: [parentCategoryId], references: [id])
  childCategory    Category @relation("ChildToTreePath", fields: [childCategoryId], references: [id])

  @@id([parentCategoryId, childCategoryId])
  @@index([childCategoryId])
  @@index([parentCategoryId])
}

model Product {
  id          String    @id @default(uuid())
  name        String
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([categoryId])
}