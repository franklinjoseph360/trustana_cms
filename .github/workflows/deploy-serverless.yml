name: Deploy Backend CMS API app with Serverless

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  NODE_VERSION: "18"
  SLS_TELEMETRY_DISABLED: "1"

jobs:
  deploy:
    # If AWS_ROLE_TO_ASSUME is stored as an Environment secret,
    # uncomment the next line and set it to that environment name.
    # environment: prod
    runs-on: ubuntu-latest

    concurrency:
      group: deploy-prod
      cancel-in-progress: false

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Generate Prisma client
        if: hashFiles('prisma/schema.prisma') != ''
        run: npx prisma generate

      - name: Build
        run: npm run build

      - name: Prune dev deps
        run: npm prune --production

      - name: Assert AWS role secret present
        env:
          AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        run: |
          if [ -z "$AWS_ROLE_TO_ASSUME" ]; then
            echo "AWS_ROLE_TO_ASSUME is not set. If it's an Environment secret, set 'environment:' on this job to that environment name."
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-serverless-deploy
          audience: sts.amazonaws.com

      - name: Serverless CLI (v3) version
        run: npx -y serverless@3 --version

      - name: Deploy
        run: npx -y serverless@3 deploy --stage prod

      - name: Show endpoints
        run: npx -y serverless@3 info --verbose
